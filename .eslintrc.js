module.exports = {
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: 'tsconfig.json',
    tsconfigRootDir : __dirname, 
    sourceType: 'module',
  },
  plugins: ['@typescript-eslint/eslint-plugin'],
  extends: [
    'plugin:@typescript-eslint/recommended',
    'plugin:prettier/recommended',
  ],
  root: true,
  env: {
    node: true,
    jest: true,
  },
  ignorePatterns: ['.eslintrc.js'],
  rules: {
    'prettier/prettier': ['error', {
      'endOfLine': 'auto',
    }],
    'class-methods-use-this': 'error',
    'consistent-return': 'error',
    'func-names': 'error',
    'max-len': ['error', { 'code': 250, 'ignoreTemplateLiterals': true }],
    'newline-per-chained-call': 'off',
    'no-await-in-loop': 'error',
    'no-continue': 'off',
    'no-param-reassign': ['error', { 'props': false }],
    'no-underscore-dangle': ['error', { 'allow': ['_id'] }],
    'no-void': ['error', { 'allowAsStatement': true }],
    'object-curly-newline': 'error',
    'spaced-comment': ['error', 'always', { 'line': { 'markers': ['/', '#region', '#endregion'] } }],
    'lines-between-class-members': ['error', 'always', { 'exceptAfterSingleLine': true }],
    'no-dupe-class-members': 'error',
    'no-duplicate-imports': 'error',
    'no-loop-func': 'error',
    'no-return-await': 'error',
    'no-unused-expressions': 'error',
    'object-curly-spacing': 'off',
    'import/prefer-default-export': 'off',
    '@typescript-eslint/consistent-indexed-object-style': 'error',
    '@typescript-eslint/consistent-type-assertions': ['error', { 'assertionStyle': 'angle-bracket' }],
    '@typescript-eslint/lines-between-class-members': ['error', 'always', { 'exceptAfterSingleLine': true }],
    '@typescript-eslint/member-delimiter-style': 'error',
    '@typescript-eslint/member-ordering': 'error',
    '@typescript-eslint/no-explicit-any': 'warn',
    '@typescript-eslint/naming-convention': ['error',
      { 'selector': 'default', 'format': ['strictCamelCase'] },
      { 'selector': 'variable', 'format': ['strictCamelCase', 'UPPER_CASE', 'StrictPascalCase'] },
      { 'selector': 'parameter', 'modifiers': ['unused'], 'format': ['strictCamelCase'], 'leadingUnderscore': 'allow' },
      { 'selector': 'property', 'format': null },
      { 'selector': 'typeProperty', 'format': null },
      { 'selector': 'typeLike', 'format': ['StrictPascalCase'] },
      { 'selector': 'enumMember', 'format': ['UPPER_CASE'] }
    ],
    '@typescript-eslint/no-dupe-class-members': 'error',
    '@typescript-eslint/no-duplicate-imports': 'error',
    '@typescript-eslint/return-await': 'error',
    'sonarjs/no-duplicate-string': 'off',
    "require-await": "error",
    "@typescript-eslint/no-floating-promises": ["error", { "ignoreIIFE": true, "ignoreVoid": true }],
    "@typescript-eslint/no-inferrable-types": ["error", { "ignoreParameters": true, "ignoreProperties": true }],
    "@typescript-eslint/no-misused-promises": ["error", { "checksVoidReturn": false }],
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
    "@typescript-eslint/no-unnecessary-condition": "off",
    "@typescript-eslint/no-unnecessary-qualifier": "error",
    "@typescript-eslint/no-unnecessary-type-arguments": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/no-unnecessary-type-constraint": "error",
    "@typescript-eslint/no-unsafe-assignment": "off",
    "@typescript-eslint/no-unsafe-member-access": "off",
    "@typescript-eslint/no-unused-expressions": "error",
    "@typescript-eslint/object-curly-spacing": ["error", "always"],
    "@typescript-eslint/prefer-includes": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/promise-function-async": "off",
    "@typescript-eslint/restrict-template-expressions": "off",
    "@typescript-eslint/typedef": ["error", { "memberVariableDeclaration": true, "parameter": true, "propertyDeclaration": true }],
  }
};
